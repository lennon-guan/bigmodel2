// Generated by big model
package test_bigmodel_generating

// BEGIN_IMPORT, DO NOT MODIFY OR DELETE THIS LINE
import (
	"sync"
)

// END_IMPORT, DO NOT MODIFY OR DELETE THIS LINE

type (
	RiskControlModelEx interface {
		RiskControlModel
		// ID
		GetID() (int, error)
		DefaultID(defaultValue int) int
		// Nickname
		GetNickname() (string, error)
		DefaultNickname(defaultValue string) string
		// IP
		GetIP() (string, error)
		DefaultIP(defaultValue string) string
	}
	_RiskControlModelInnerImpl struct {
		env interface{}
		// user
		user__data *models.User
		user__once sync.Once
		user__err  error
		// header
		header__data *views.HeaderInfo
		header__once sync.Once
		header__err  error
	}
	_RiskControlModelImpl struct{ _RiskControlModelInnerImpl }
)

func NewRiskControlModel(env interface{}) RiskControlModelEx {
	return &_RiskControlModelImpl{
		_RiskControlModelInnerImpl{env: env},
	}
}

/******************************
 * Property ID
 ******************************/

func (m *_RiskControlModelInnerImpl) ID() int {
	if d, e := m.onceGetUser(); e != nil {
		panic(e)
	} else {
		return d.Id
	}
}

func (m *_RiskControlModelInnerImpl) GetID() (ret int, err error) {
	if d, e := m.onceGetUser(); e != nil {
		err = e
	} else {
		ret = d.Id
	}
	return
}

func (m *_RiskControlModelInnerImpl) DefaultID(defaultValue int) int {
	if d, e := m.onceGetUser(); e != nil {
		return defaultValue
	} else {
		return d.Id
	}
}

/******************************
 * Property Nickname
 ******************************/

func (m *_RiskControlModelInnerImpl) Nickname() string {
	if d, e := m.onceGetUser(); e != nil {
		panic(e)
	} else {
		return d.Nickname
	}
}

func (m *_RiskControlModelInnerImpl) GetNickname() (ret string, err error) {
	if d, e := m.onceGetUser(); e != nil {
		err = e
	} else {
		ret = d.Nickname
	}
	return
}

func (m *_RiskControlModelInnerImpl) DefaultNickname(defaultValue string) string {
	if d, e := m.onceGetUser(); e != nil {
		return defaultValue
	} else {
		return d.Nickname
	}
}

/******************************
 * Property IP
 ******************************/

func (m *_RiskControlModelInnerImpl) IP() string {
	if d, e := m.onceGetHeader(); e != nil {
		panic(e)
	} else {
		return d.RemoteIP
	}
}

func (m *_RiskControlModelInnerImpl) GetIP() (ret string, err error) {
	if d, e := m.onceGetHeader(); e != nil {
		err = e
	} else {
		ret = d.RemoteIP
	}
	return
}

func (m *_RiskControlModelInnerImpl) DefaultIP(defaultValue string) string {
	if d, e := m.onceGetHeader(); e != nil {
		return defaultValue
	} else {
		return d.RemoteIP
	}
}

func (m *_RiskControlModelInnerImpl) onceGetUser() (*models.User, error) {
	m.user__once.Do(func() {
		m.user__data, m.user__err = m.getUser(m.env)
	})
	return m.user__data, m.user__err
}

func (m *_RiskControlModelInnerImpl) onceGetHeader() (*views.HeaderInfo, error) {
	m.header__once.Do(func() {
		m.header__data, m.header__err = m.getHeader(m.env)
	})
	return m.header__data, m.header__err
}

//请另起文件自行实现以下方法：

// func (m *_RiskControlModelInnerImpl) getUser(env interface{}) (*models.User, error)
// func (m *_RiskControlModelInnerImpl) getHeader(env interface{}) (*views.HeaderInfo, error)
